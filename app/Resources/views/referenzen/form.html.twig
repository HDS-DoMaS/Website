{% extends 'base.html.twig' %}

{% form_theme form 'bootstrap_3_horizontal_layout.html.twig' %}

{% block body %}
    {% set referenzenCount = 0 %}

    <h1>
        Referenzen für Archivierung #{{ form.vars.data.archivId }}
        <small>{{ form.vars.data.titel }}</small>
    </h1>

    <form name="form" method="post" class="form-horizontal">

        <h3>Referenzen in DoMaS</h3>
        <ul class="referenzen" data-id="{{ form_widget(form.referenzen.vars.prototype.archivId)|e('html_attr') }}" data-titel="{{ form_widget(form.referenzen.vars.prototype.titel)|e('html_attr') }}">
            {% for referenz in form.referenzen %}
                <li>
                    <div class="col-sm-10">
                        <input type="text" id="form_referenzen_{{ referenzenCount }}_archivId" name="form[referenzen][{{ referenzenCount }}][archivId]" required="required" class="form-control" value="{{ referenz.vars.value.archivId }}" />
                        <input type="text" id="form_referenzen_{{ referenzenCount }}_titel" name="form[referenzen][{{ referenzenCount }}][titel]" required="required" class="form-control" value="{{ referenz.vars.value.titel }}" />
                        <a href="{{ path('_detailView', {'archivId': referenz.vars.value.archivId}) }}" target="_blank"><span class="glyphicon glyphicon-link"></span> {{ referenz.vars.value.titel }}</a>
                    </div>
                </li>

                {% set referenzenCount = referenzenCount + 1 %}
            {% endfor %}
        </ul>

        <h3>Archivierungen durchsuchen</h3>
        <div>
            <input type="text" name="suche" id="referenzenSuche">
            <table id="referenzenTabelle" class="table table-striped table-bordered table-condensed">

            </table>
            <div id="referenzenPaging"></div>
        </div>

        {{ form_widget(form._token) }}

        <a href="{{ path('_detailView', {'archivId': form.vars.data.archivId}) }}" class="btn btn-default">
            zurück
        </a>

        <button type="submit" id="form_speichern" name="form[speichern]" class="btn-red btn">Speichern</button>

    </form>
{% endblock %}

{% block javascripts %}
    <style type="text/css">
        h3 {
            clear: both;
        }
        .referenzen li {
            padding-bottom: 12px;
        }
        .referenzen input {
            display: none;
        }
        .referenzen .col-sm-10 {
            padding-left: 0;
        }
    </style>

    <script type="text/javascript">
        var $collectionHolderReferenzen;

        function addReferenzForm($collectionHolder, archivId, titel) {
            var archivLink = '{{ path('_detailView', {'archivId': 666}) }}';

            // Get the data-prototype explained earlier
            var prototypeId = $collectionHolder.data('id');
            var prototypeTitel = $collectionHolder.data('titel');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototypeId.replace(/__name__/g, index).replace(/required=/, 'value="' + archivId + '" required=')
                    + prototypeTitel.replace(/__name__/g, index).replace(/required=/, 'value="' + titel + '" required=')
                    + '<a href="' + archivLink.replace(/666/, archivId) + '" target="_blank"><span class="glyphicon glyphicon-link"></span> ' + titel + '</a>';

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a referenz" link li
            var $newFormLi = $('<li></li>').append(newForm);

            $collectionHolder.append($newFormLi);
            $newFormLi.wrapInner('<div class="col-sm-10"></div>');

            // add a delete link
            addReferenzFormDeleteLink($newFormLi);
        }

        function addReferenzFormDeleteLink($referenzFormLi) {
            var $removeFormA = $('<a href="#" class="btn btn-sm"><span class="glyphicon glyphicon-trash"></span> entfernen</a>');
            $referenzFormLi.append($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the keyword form
                $referenzFormLi.remove();
            });
        }

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of referenzen
            $collectionHolderReferenzen = $('ul.referenzen');

            // add a delete link to all of the existing referenz form li elements
            $collectionHolderReferenzen.find('li').each(function() {
                addReferenzFormDeleteLink($(this));
            });

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolderReferenzen.data('index', $collectionHolderReferenzen.find(':input').length);

            $('#referenzenTabelle').delegate('.addReferenz', 'click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                if(false == IsInReferenzen($(this).data('id'))) {
                    addReferenzForm($collectionHolderReferenzen, $(this).data('id'), $(this).data('titel'));
                    $(this).addClass('disabled');
                }

                $(this).html('hinzugefügt');
                this.blur();

                return false;
            });

            var delay = (function(){
                var timer = 0;
                return function(callback, ms){
                    clearTimeout (timer);
                    timer = setTimeout(callback, ms);
                };
            })();

            $('#referenzenSuche').keypress(function(e) {
                // Enter
                if(e.keyCode == 13) {
                    e.preventDefault();
                    return false;
                }
            });

            function IsInReferenzen(id) {
                var isInReferenzen = false;

                $("[name^='form[referenzen]']").each(function() {
                    if(this.name.indexOf('archivId') > 0 && this.value == id) {
                        isInReferenzen = true;
                        return true;
                    }
                });

                return isInReferenzen;
            }

            function referenzenPaging(response) {
                var html = '';

                if(response.items.length > 0) {
                    html += '<div class="pagination">';

                    for (page = 1; page <= response.pageCount; page++) {
                        // First
                        if(page == 1) {
                            // First
                            if(page != response.page) {
                                html += '<span class="first">' + '\r\n' + '<a href="#" title="Seite 1" data-page="1">&lt;&lt;</a></span>';
                            } else {
                                html += '<span class="disabled first">&lt;&lt;</span>';
                            }

                            // Previous
                            if(response.page > 1) {
                                html += '<span class="previous">' + '\r\n' + '<a href="#" title="Seite ' + (response.page - 1) + '" data-page="' + (response.page - 1) + '">&lt;</a></span>';
                            }

                            // ..
                            if(response.page - 3 > 1) {
                                html += '<span class="disabled"><span>&hellip;</span></span>';
                            }
                        }

                        // Current in Range
                        if(page <= response.page + 3 && page >= response.page - 3) {
                            if(page != response.page) {
                                html += '<span class="page">' + '\r\n' + '<a href="#" title="Seite ' + page + '" data-page="' + page + '">' + page + '</a></span>';
                            }
                            else {
                                html += '<span class="current">' + page + '</span>';
                            }
                        }

                        // Last
                        if(page == response.pageCount) {
                            // ..
                            if(response.page + 3 < response.pageCount) {
                                html += '<span class="disabled"><span>&hellip;</span></span>';
                            }

                            // Next
                            if(response.page < response.pageCount) {
                                html += '<span class="next">' + '\r\n' + '<a href="#" title="Seite ' + (response.page + 1) + '" data-page="' + (response.page + 1) + '">&gt;</a></span>';
                            }

                            // Last
                            if(page != response.page) {
                                html += '<span class="last">' + '\r\n' + '<a href="#" title="Seite ' + response.pageCount + '" data-page="' + response.pageCount + '">&gt;&gt;</a></span>';
                            } else {
                                html += '<span class="disabled last">&gt;&gt;</span>';
                            }
                        }
                    }

                    html += '</div>';
                }

                $('#referenzenPaging').html(html);
            }

            function preg_quote (str, delimiter) {
                return (str + '')
                        .replace(new RegExp('[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\' + (delimiter || '') + '-]', 'g'), '\\$&')
            }

            function highlight(html, search) {
                var words = '';

                // Erster Suchparameter
                if(search.length > 0) {
                    words = preg_quote(search) + '|' + preg_quote(search).replace(' ', '|');
                }

                if(words.length > 0) {
                    html = html.replace(new RegExp( '(' + words + ')', "i"), '<span class="highlight">$1</span>')
                }

                return html;
            }

            function referenzenResponse(response, search) {
                if(response == null) {
                    return false;
                }

                // Table Header
                var html = '<tr>'
                        + '<th><a>#</a></th>'
                        + '<th><a>Titel</a></th>'
                        + '<th><a>Kategorie</a></th>'
                        + '<th><a>Abgabe</a></th>'
                        + '<th></th>'
                        + '</tr>';

                response.items.forEach(function (item) {
                    // archivId & Titel
                    html += '<tr>'
                            + '<td>' + item.archivId + '</td>'
                            + '<td>' + highlight(item.titel, search) + '</td>'
                            + '<td>' + highlight(item.kategorie, search) + '</td>'
                            + '<td>' + highlight(item.abgabedatum, search) + '</td>';

                    // Button
                    if(IsInReferenzen(item.archivId)) {
                        html += '<td><a href="#" class="addReferenz btn btn-sm disabled" data-id="' + item.archivId + '" data-titel="' + item.titel + '">hinzugefügt</a></td>';
                    } else {
                        html += '<td><a href="#" class="addReferenz btn btn-sm" data-id="' + item.archivId + '" data-titel="' + item.titel + '">hinzufügen</a></td>';
                    }

                    html += '</tr>';
                });

                // Paging
                referenzenPaging(response);

                $('#referenzenTabelle').html(html);
            }

            function referenzenAjaxRequest(page) {
                var search = $('#referenzenSuche').val();

                delay(function() {
                    var url = "{{ path('_sucheReferenzen') }}" + search;

                    if(page > 1) {
                        url += '?page=' + page;
                    }

                    $.ajax({
                        url: url,
                        dataType: "json",
                        cache: false,
                        success: function (response) {
                            referenzenResponse(response, search);
                        }
                    });
                }, 300);
            }

            $('#referenzenSuche').keyup(function() {
                referenzenAjaxRequest(1);
            });

            $('#referenzenPaging').delegate('a', 'click', function(e) {
                referenzenAjaxRequest($(this).data('page'));
                e.preventDefault();
                return false;
            });
        });
    </script>
{% endblock %}


